#############################################################################
# Makefile for building: sf-vm
# Generated by qmake (2.01a) (Qt 4.8.7) on: Fri May 6 22:23:29 2016
# Project:  proj.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt4/bin/qmake -o Makefile proj.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
MM_NO_DEBUG   = -DMM_NO_DEBUG
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_WEBKIT_LIB -DQT_SCRIPT_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CXXFLAGS      = -g -m64 -O2 -pipe -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I../ -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtScript -I/usr/include/qt4/QtWebKit -I/usr/include/qt4 -I.ob -I/usr/include/qt4/Qsci/
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lboost_system -lboost_iostreams -lboost_filesystem -lqscintilla2 -lQtWebKit -lQtScript -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = .obj/

####### Files

HPP_FILES = mmc_image.hpp core_image.hpp vm.hpp log.hpp utils.hpp defs.hpp mmobj.hpp process.hpp prims.hpp mmc_fun.hpp ctrl.hpp mmjit.hpp qt_prims.hpp qsc.hpp

SOURCES =  mmc_image.cpp core_image.cpp vm.cpp log.cpp utils.cpp mmobj.cpp main.cpp process.cpp prims.cpp mmc_fun.cpp ctrl.cpp mmjit.cpp qt_prims.cpp qsc.cpp

QMAKE_TARGET  = sf-vm
DESTDIR       =
TARGET        = sf-vm

####### Build rules

# $(TARGET):  $(OBJECTS)
# 	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)


####### Compile

sf-fm: $(SOURCES) $(HP_FILES)
	$(CXX) $(SOURCES) $(CXXFLAGS) $(INCPATH) -o sf-vm $(LFLAGS) $(LIBS) $(MM_NO_DEBUG)

unopt: $(SOURCES) $(HP_FILES)
	$(CXX) $(SOURCES) $(CXXFLAGS) $(INCPATH) -o sf-vm $(LFLAGS) $(LIBS)

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

jit:
	lua5.3 ../dynasm/dynasm.lua -L mmjit.dasc  > mmjit.cpp
